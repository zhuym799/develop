<ActionTemplates>
   <Action>
      <Name>String.AbbreviateFilePath</Name>
      <Description>返回简短的文件路径。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>FilePath</Name>
            <Description>要缩短的文件路径。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"C:\\Program Files\\Myfile.txt"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Characters</Name>
            <Description>在简短路径中要使用的最多字符数。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>25</Default>
               <DataType>number</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Asc</Name>
      <Description>返回字符的 ASCII 代码 (十进制)。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Char</Name>
            <Description>要获取 ASCII 代码的字符。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"z"</Default>
               <DataType>string</DataType>
               <Constraints>1,260</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Char</Name>
      <Description>返回指定 ASCII 代码的字符值 (十进制)。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>ASCII</Name>
            <Description>ASCII 代码。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>68</Default>
               <DataType>number</DataType>
               <Constraints>0,127</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Compare</Name>
      <Description>比较两个字符串 (区分大小写)。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Text</Name>
            <Description>将被比较的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"SETUP"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CompareTo</Name>
            <Description>将要比较的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"Setup"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.CompareFileVersions</Name>
      <Description>比较两个文件的版本。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Version</Name>
            <Description>将被比较的版本字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"1.0.20.3"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CompareTo</Name>
            <Description>将要比较的版本字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"1.0.2.3"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.CompareNoCase</Name>
      <Description>比较两个字符串 (区分大小写)。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Text</Name>
            <Description>将被比较的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"SETUP"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CompareTo</Name>
            <Description>将要比较的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"Setup"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Concat</Name>
      <Description>添加 (或连接) 两个字符串，并返回结果为一个新字符串。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>StartString</Name>
            <Description>被添加的字符串。该字符串将显示在新字符串的开头。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"字符串 1"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>EndString</Name>
            <Description>添加 (追加) 到 StartString 的字符串。该字符串将显示在 StartString 之后。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"字符串 2"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Find</Name>
      <Description>查找子字串第一次出现的位置。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SearchString</Name>
            <Description>被搜索的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"汉化新世纪"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Pattern</Name>
            <Description>要搜索的子字串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"汉化"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>StartAt</Name>
            <Description>SearchString 的起始搜索位置。默认为 1，即字符串中的第一个字符。</Description>
            <Type>number</Type>
            <Default>1</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>1</Default>
               <DataType>number</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CaseSensitive</Name>
            <Description>搜索是否区分大小写。</Description>
            <Type>boolean</Type>
            <Default>false</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>false</Default>
               <DataType>boolean</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.GetFormattedSize</Name>
      <Description>给定字节数，返回格式化字符串，转换为 字节、KB、MB 或 GB，并可插入逗号。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SizeInBytes</Name>
            <Description>要转换的原是字节数。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>2000</Default>
               <DataType>number</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Format</Name>
            <Description>要返回的格式。</Description>
            <Type>number</Type>
            <Default>FMTSIZE_AUTOMATIC</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>FMTSIZE_AUTOMATIC</Default>
               <DataType>combo</DataType>
               <Constraints>FMTSIZE_AUTOMATIC,FMTSIZE_BYTES,FMTSIZE_KB,FMTSIZE_MB,FMTSIZE_GB</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>ShowCommas</Name>
            <Description>是否插入逗号 (即 "63636" 变成 "63,636")。</Description>
            <Type>boolean</Type>
            <Default>true</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>true</Default>
               <DataType>boolean</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Left</Name>
      <Description>从现有字符串的最左边的 x 个字符创建一个新字符串。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>LeftString</Name>
            <Description>要复制字符的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"0123456789"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>NumChar</Name>
            <Description>要从字符串左边复制的字符数量。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>4</Default>
               <DataType>number</DataType>
               <Constraints>-1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Length</Name>
      <Description>返回字符串中的字符数量。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>LengthString</Name>
            <Description>要获取长度的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"0123456789"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Lower</Name>
      <Description>返回字符串的全小写样式。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>ToLower</Name>
            <Description>要转换为小写字母的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"TOLOWER"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.MakePath</Name>
      <Description>返回基于指定表中元素的路径。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>PathParts</Name>
            <Description>包含创建路径的必要部分的表。</Description>
            <Type>table</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>PathTable</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Mid</Name>
      <Description>从字符串返回指定的字符范围。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>MidString</Name>
            <Description>要复制字符的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"0123456789"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CharStart</Name>
            <Description>开始复制的位置。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>2</Default>
               <DataType>number</DataType>
               <Constraints>-1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>NumChar</Name>
            <Description>要复制的字符数量。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>3</Default>
               <DataType>number</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Repeat</Name>
      <Description>按给定的次数重复字符串。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>RepeatString</Name>
            <Description>要复制字符的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"X"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>NumRepeat</Name>
            <Description>重复的次数。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Replace</Name>
      <Description>在字符串中搜索子字串，并将其替换为新的子字串。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SearchString</Name>
            <Description>被搜索的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"012X345X678X9"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Pattern</Name>
            <Description>要搜索的子字串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"X"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>ReplaceString</Name>
            <Description>替换子字串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"x"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CaseSensitive</Name>
            <Description>搜索是否区分大小写。</Description>
            <Type>boolean</Type>
            <Default>false</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>false</Default>
               <DataType>boolean</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.ReverseFind</Name>
      <Description>从右到左搜索子字串在字符串中第一次出现的位置。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SearchString</Name>
            <Description>被搜索的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"0123456789"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Pattern</Name>
            <Description>要搜索的子字串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"5"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CaseSensitive</Name>
            <Description>搜索是否区分大小写。</Description>
            <Type>boolean</Type>
            <Default>false</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>false</Default>
               <DataType>boolean</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Right</Name>
      <Description>从现有字符串的最右边 x 个字串创建新的字符串。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>RightString</Name>
            <Description>要复制字符的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"0123456789"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>NumChar</Name>
            <Description>要从字符串右边复制的字符数量。</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>4</Default>
               <DataType>number</DataType>
               <Constraints>-1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.ToNumber</Name>
      <Description>将数字字符串转换为数字值。</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>NumericString</Name>
            <Description>包含数字字符的字符串。例如："10"、"3.2"、"-5"。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"5"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.SplitPath</Name>
      <Description>将指定的路径分割为驱动器、文件夹、文件名和扩展名。</Description>
      <ReturnValueType>table</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Path</Name>
            <Description>要分割的路径。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"C:\\Program Files\\My Product\\MyFile.ext"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.TrimLeft</Name>
      <Description>从源字符串的左边清除指定的字符。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SourceString</Name>
            <Description>源字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"   123"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CharactersToTrim</Name>
            <Description>要从源字符串左边清除的字符。</Description>
            <Type>string</Type>
            <Default>nil</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>nil</Default>
               <DataType>string</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.TrimRight</Name>
      <Description>从源字符串的右边清除指定的字符。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>SourceString</Name>
            <Description>源字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"123   "</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>CharactersToTrim</Name>
            <Description>要从源字符串右边清除的字符。</Description>
            <Type>string</Type>
            <Default>nil</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>nil</Default>
               <DataType>string</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>String.Upper</Name>
      <Description>返回字符串的全大写样式。</Description>
      <ReturnValueType>string</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>ToUpper</Name>
            <Description>要转换为大写字母的字符串。</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"toupper"</Default>
               <DataType>string</DataType>
               <Constraints>1,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
</ActionTemplates>
